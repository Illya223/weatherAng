{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/geonames.service.ts","webpack:///./src/app/weather.service.ts","webpack:///./src/app/weather/weather.component.css","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\r\\n    background-color: #dedede;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <app-weather></app-weather>\\n  \\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { FormComponent } from './form/form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    FormComponent,\n   \n   \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    \n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".modal {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный черный фон */\\r\\n  }\\r\\n  \\r\\n  .modal-content {\\r\\n    width: 30%;\\r\\n    background-color: white;\\r\\n    padding: 20px;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\r\\n    z-index: 2; /* Устанавливаем более высокий z-index для контента модального окна */\\r\\n  }\\r\\n  \\r\\n  label{\\r\\n    text-align: left;\\r\\n    margin: 10px 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  button{\\r\\n    margin: 10px;\\r\\n   \\r\\n  }\\r\\n  \\r\\n  .buttons{\\r\\n    text-align: left;\\r\\n    margin: 10px;\\r\\n  }\\r\\n  \\r\\n  .suggestions {\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    border: 1px solid #ccc;\\r\\n    max-height: 150px;\\r\\n    overflow-y: auto;\\r\\n    position: absolute;\\r\\n    background-color: white;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .suggestions li {\\r\\n    padding: 10px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .suggestions li:hover {\\r\\n    background-color: #f0f0f0;\\r\\n  }\\r\\n  \\r\\n  .full-width {\\r\\n    width: 100%;}\\r\\n  \\r\\n  #city{\\r\\n    width: 70%;\\r\\n  }\\r\\n  \\r\\n  label{\\r\\n    padding-right: 20px;\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 680px){\\r\\n    .modal-content{\\r\\n      width: 70%;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 450px){\\r\\n    .modal-content{\\r\\n      width: 90%;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"modal\\\">\\n    <div class=\\\"modal-content\\\"> \\n      <h2>Select city</h2>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"form\\\">\\n        <label for=\\\"city\\\">City</label>\\n      <select id=\\\"city\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" required>\\n        <option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">{{ city.name }}</option>\\n      </select>\\n      \\n        \\n      <div class=\\\"buttons\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Get Weather</button>\\n        <button type=\\\"button\\\" (click)=\\\"onCancel()\\\"  class=\\\"btn  btn-danger\\\">Cancel</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\"","import { Component, OnInit, EventEmitter, Output  } from '@angular/core';\nimport { GeonamesService } from '../geonames.service';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  @Output() weatherRequest = new EventEmitter<{ city: string}>();\n  @Output() cancelRequest = new EventEmitter<void>();\n\n  \n  city: string = 'London';\n  cities: any[] = [];\n  \n  \n\n  onSubmit(): void {\n    this.weatherRequest.emit({ city: this.city});\n  }\n  onCancel(): void {\n    this.cancelRequest.emit();\n  }\n  constructor(private geonamesService: GeonamesService) { }\n\n  ngOnInit():void {\n    this.geonamesService.getCities().subscribe(data => {\n      this.cities = data.geonames;\n    });\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeonamesService {\n  private username = 'illya'; // Замените на ваш username Geonames\n  private apiUrl = `http://api.geonames.org/searchJSON?username=${this.username}&maxRows=1000&cities=cities15000`;\n\n  constructor(private http: HttpClient) { }\n\n  getCities(): Observable<any> {\n    return this.http.get<any>(this.apiUrl);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  private apiKey = 'e2c730b2b5b2a1900fa6c13cb1cc163a';\n  private apiUrl = 'https://api.openweathermap.org/data/2.5';\n  private geoUrl = 'http://api.openweathermap.org/geo/1.0/direct';\n\n  constructor(private http: HttpClient) { }\n\n  getWeather(city: string): Observable<any> {\n    const url = `${this.apiUrl}?q=${city}&appid=${this.apiKey}&units=metric`;\n    return this.http.get(url);\n  }\n\n  getCoordinates(city: string): Observable<any> {\n    const url = `${this.geoUrl}?q=${city}&limit=1&appid=${this.apiKey}`;\n    return this.http.get(url).pipe(\n      map((response: any) => {\n        if (response.length > 0) {\n          return {\n            lat: response[0].lat,\n            lon: response[0].lon\n          };\n        } else {\n          throw new Error('City not found');\n        }\n      })\n    );\n  }\n\n  getWeatherbyDate(city: string): Observable<any> {\n    return this.getCoordinates(city).pipe(\n      switchMap(coords => {\n        const url = `${this.apiUrl}/forecast?lat=${coords.lat}&lon=${coords.lon}&units=metric&appid=${this.apiKey}`;\n        return this.http.get<any>(url).pipe(\n          map(response => response) // Убедитесь, что вы возвращаете массив list\n        );\n      })\n    );\n  }\n\n}\n","module.exports = \".backdrop {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный черный фон */\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    z-index: 1; /* Устанавливаем более высокий z-index для фона */\\r\\n  }\\r\\n  .forecast-container {\\r\\n    margin-top: 20px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n  .forecast-scroll {\\r\\n    display: flex;\\r\\n    overflow-x: auto;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n  }\\r\\n  .day-block {\\r\\n    min-width: 200px;\\r\\n    padding: 20px;\\r\\n    margin-right: 20px;\\r\\n    background-color: #ceffff;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    flex-shrink: 0;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  .hourly-container {\\r\\n    padding: 10px;\\r\\n    background-color: #f0f0f0;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  .detail-block {\\r\\n    min-width: 150px;\\r\\n    padding: 10px;\\r\\n    margin-right: 10px;\\r\\n    background-color: #e0e0e0;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    flex-shrink: 0;\\r\\n  }\\r\\n  button {\\r\\n    \\r\\n    cursor: pointer;\\r\\n  }\\r\\n  @media (max-width: 680px) {\\r\\n  \\r\\n  .forecast-scroll {\\r\\n    flex-direction: column;\\r\\n    overflow-y: scroll;\\r\\n    height: 500px;\\r\\n  }\\r\\n  .day-block {\\r\\n    margin: 10px 20px;\\r\\n  }\\r\\n  \\r\\n\\r\\n}\"","module.exports = \"<h1>Weather forecast</h1>\\n\\n  <button (click)=\\\"toggleForm()\\\" class=\\\"btn btn-dark\\\">Select City</button>\\n  <div *ngIf=\\\"showForm\\\"  class=\\\"backdrop\\\">\\n    <app-form (weatherRequest)=\\\"onWeatherRequest($event)\\\" (cancelRequest)=\\\"onCancel()\\\"></app-form>\\n  </div>\\n\\n  \\n  <div class=\\\"forecast-container\\\" *ngIf=\\\"weatherData && weatherData.length\\\">\\n    <h2>5-Day Weather Forecast for {{ city }}</h2>\\n  \\n    <!-- Список дней -->\\n    <div class=\\\"forecast-scroll\\\" *ngIf=\\\"!showHourly\\\">\\n      <div *ngFor=\\\"let day of weatherData; let i = index\\\" class=\\\"day-block\\\" (click)=\\\"showHourlyForecast(i)\\\">\\n        <p>Date: {{ day.date }}</p>\\n        <p>Average Temperature: {{ day.avgTemp }} °C</p>\\n      </div>\\n    </div>\\n  \\n    <!-- Детализированный прогноз по часам -->\\n    <div class=\\\"hourly-container\\\" *ngIf=\\\"showHourly\\\">\\n      <button (click)=\\\"goBack()\\\">Back</button>\\n      <h3>Hourly Forecast for {{ weatherData[selectedDayIndex].date }}</h3>\\n      <div class=\\\"forecast-scroll\\\">\\n        <div *ngFor=\\\"let detail of weatherData[selectedDayIndex].details\\\" class=\\\"day-block\\\">\\n          <img src=\\\"http://openweathermap.org/img/wn/{{detail.iconUrl}}.png\\\">\\n          <p>Time: {{ detail.dt * 1000 | date:'shortTime' }}</p>\\n          <p>Temperature: {{ detail.temp.toFixed(1) }} °C</p> <!-- Округление до одной цифры после запятой -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  weatherData: any;\n  city: string = 'kyiv';\n  showForm: boolean = false;\n  selectedDayIndex: number | null = null;\n  showHourly: boolean = false;\n  \n\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit(): void {\n    this.getWeather1();\n    }\n\n  toggleForm(): void {\n    this.showForm = !this.showForm;\n  }\n  onCancel(): void {\n    this.showForm = false; // Скрыть форму при отмене\n  }\n\n  getWeather1(): void {\n    this.weatherService.getWeatherbyDate(this.city).subscribe(\n      data => {\n        \n        this.weatherData = this.processForecastData(data);;\n        console.log(data)\n        console.log(this.weatherData)\n      },\n      error => {\n        console.error('Error fetching weather data', error);\n      }\n    );\n  }\n\n  onWeatherRequest(event: { city: string }): void {\n    this.weatherService.getWeatherbyDate(event.city).subscribe(\n      data => {\n        this.city = event.city;\n        this.weatherData = this.processForecastData(data);\n        console.log(this.weatherData)\n      },\n      error => {\n        console.error('Error fetching weather data', error);\n      }\n    );\n    this.showForm = false; // Скрыть форму после отправки запроса\n  }\n\n  processForecastData(data: any): any[] {\n    const days: any[] = [];\n    let currentDay: any = null;\n\n    data.list.forEach((entry: any) => {\n      const date = new Date(entry.dt * 1000);\n      const dayDate = date.toISOString().split('T')[0]; // Получаем дату без времени\n      \n\n      if (!currentDay || currentDay.date !== dayDate) {\n        currentDay = {\n          date: dayDate,\n          avgTemp: 0,\n          details: []\n        };\n        days.push(currentDay);\n      }\n\n      currentDay.details.push({\n        dt: entry.dt,\n        temp: entry.main.temp,\n        iconUrl: entry.weather[0].icon\n      });\n\n      // Пересчитываем среднюю температуру\n      currentDay.avgTemp = currentDay.details.reduce((sum, detail) => sum + detail.temp, 0) / currentDay.details.length;\n    });\n\n    days.forEach(day => {\n      day.avgTemp = parseFloat(day.avgTemp.toFixed(1));\n    });\n\n    return days;\n  }\n\n  showHourlyForecast(index: number) {\n    this.selectedDayIndex = index;\n    this.showHourly = true;\n  }\n\n  goBack() {\n    this.showHourly = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}